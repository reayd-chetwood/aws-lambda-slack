AWSTemplateFormatVersion: "2010-09-09"

Description: >
  AWSBot CloudFormation Template Continuous Delivery: This template
  builds an AWS CodePipeline pipeline that implements a continuous delivery release
  process for AWS CloudFormation stacks.
  **WARNING** This template creates an Amazon EC2 instance. You will be billed
  for the AWS resources used when you create a stack using this template.

Parameters:
  ArtifactStoreBucket:
    Description: S3 bucket to store artifacts in.
    Type: String
  DeployBuckets:
    Description: Upstream buckets in test and prod environments
    Type: String
  Environment:
    Description: Environment to deploy to
    Type: String
    AllowedValues:
      - dev
      - test
      - prod
  RepositoryName:
    Description: Name of the CodeCommit repository
    Type: String
  StackName:
    Description: Name of the CloudFormation Stack to update/create
    Type: String

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "General Settings"
        Parameters:
          - Environment
      - Label:
          default: "CodeBuild Settings"
        Parameters:
          - RepositoryName

Conditions:
  CreateCodeCommitPipeline: !Equals [dev, !Ref Environment]
  CreateS3Pipeline: !Not
    - !Equals [dev, !Ref Environment]

Mappings:
  EnvironmentMap:
    dev:
      "PrettyName": "Dev"
    test:
      "PrettyName": "Test"
    prod:
      "PrettyName": "Prod"


Resources:
  CodePipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AWSLambdaFullAccess'
        - 'arn:aws:iam::aws:policy/AWSElasticBeanstalkFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonECS_FullAccess'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "codecommit:*"
                  - "s3:*"
                  - "ecs:*"
                  - "codebuild:StartBuild"
                  - "codebuild:BatchGetBuilds"
                  - "cloudformation:CreateStack"
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:DeleteStack"
                  - "cloudformation:UpdateStack"
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:ExecuteChangeSet"
                  - "cloudformation:DeleteChangeSet"
                  - "cloudformation:DescribeChangeSet"
                  - "cloudformation:SetStackPolicy"
                  - "iam:PassRole"
                  - "sns:Publish"
                Resource: '*'

  CodePipelineBuildRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: CodeCommitPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "codecommit:*"
                Resource: '*'
        - PolicyName: CLoudWatchLogsPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: '*'
        - PolicyName: S3Policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "s3:PutObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:List*"
                Resource: '*'
        - PolicyName: LambdaPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "lambda:UpdateFunctionCode"
                Resource: "*"

  CodePipelineCFNRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: CodePipelineCFNPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "iam:CreateRole"
                  - "iam:DeleteRole"
                  - "iam:PutRolePolicy"
                  - "iam:DeleteRolePolicy"
                  - "iam:PassRole"
                  - "iam:GetRole"
                  - "lambda:*"
                  - "sns:ListTopics"
                  - "sns:CreateTopic"
                  - "sns:DeleteTopic"
                  - "sns:GetTopicAttributes"
                  - "sns:SetTopicAttributes"
                  - "sns:Subscribe"
                  - "events:DescribeRule"
                  - "events:PutRule"
                  - "events:RemoveTargets"
                  - "events:DeleteRule"
                  - "events:PutTargets"
                Resource: '*'

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Condition: CreateCodeCommitPipeline
    Properties:
      ArtifactStore:
        Location: !Ref ArtifactStoreBucket
        Type: S3
      DisableInboundStageTransitions: []
      Name: !Join
        - '-'
        - - !Ref RepositoryName
          - !Ref Environment
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: '1'
              Configuration:
                RepositoryName: !Ref RepositoryName
                BranchName: master
              OutputArtifacts:
                - Name: Source
              RunOrder: '1'
        - Name: CloudFormation
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider:  CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: Source
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_NAMED_IAM
                ParameterOverrides: !Join
                    - ''
                    - - '{ "Environment": "'
                      - !Ref Environment
                      - '" }'
                RoleArn: !GetAtt CodePipelineCFNRole.Arn
                StackName: !Ref StackName
                TemplatePath: Source::cloudformation.yml
              RunOrder: '1'
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Join
                  - '-'
                  - - !Ref RepositoryName
                    - !Ref Environment
              InputArtifacts:
                - Name: Source
              OutputArtifacts:
                - Name: Build
              RunOrder: '1'
        - Name: Upstream
          Actions:
            - Name: Invoke
              ActionTypeId:
                Category: Invoke
                Owner: AWS
                Provider: Lambda
                Version: '1'
              Configuration:
                FunctionName: PipelineUpstream
                UserParameters:  !Join
                  - ''
                  - - '{"Buckets": ["'
                    - !Ref DeployBuckets
                    - '"], "Key": "'
                    - !Ref RepositoryName
                    - '/deploy.zip"}'
              RunOrder: '1'
              InputArtifacts:
                - Name: Build

  S3Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Condition: CreateS3Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref ArtifactStoreBucket
        Type: S3
      DisableInboundStageTransitions: []
      Name: !Join
        - '-'
        - - !Ref RepositoryName
          - !Ref Environment
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: '1'
              Configuration:
                S3Bucket: !Ref ArtifactStoreBucket
                S3ObjectKey: !Join
                  - ''
                  - - !Ref RepositoryName
                    - /deploy.zip
              OutputArtifacts:
                - Name: Source
              RunOrder: '1'
        - Name: CloudFormation
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider:  CloudFormation
                Version: '1'
              InputArtifacts:
                - Name: Source
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                ParameterOverrides: !Join
                    - ''
                    - - '{ "Environment": "'
                      - !Ref Environment
                      - '" }'
                RoleArn: !GetAtt CodePipelineCFNRole.Arn
                StackName: !Ref StackName
                TemplatePath: Source::cloudformation.yml
              RunOrder: '1'
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Join
                  - '-'
                  - - !Ref RepositoryName
                    - !Ref Environment
              InputArtifacts:
                - Name: Source
              OutputArtifacts:
                - Name: Build
              RunOrder: '1'

  CodeBuild:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: !Join
        - '-'
        - - !Ref RepositoryName
          - !Ref Environment
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/ubuntu-base:14.04
      ServiceRole: !Ref CodePipelineBuildRole
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: '5'